{"map":"{\"version\":3,\"sources\":[\"/home/al/Documents/projects/371/user-feed/user-feed/src/firebase.js\",\"/home/al/Documents/projects/371/user-feed/user-feed/src/components/Main.js\",\"/home/al/Documents/projects/371/user-feed/user-feed/src/App.js\",\"/home/al/Documents/projects/371/user-feed/user-feed/src/serviceWorker.js\",\"/home/al/Documents/projects/371/user-feed/user-feed/src/index.js\"],\"names\":[\"firebase\",\"initializeApp\",\"apiKey\",\"authDomain\",\"databaseURL\",\"projectId\",\"storageBucket\",\"messagingSenderId\",\"provider\",\"auth\",\"GoogleAuthProvider\",\"Main\",\"state\",\"user\",\"loggedIn\",\"componentWillReceiveProps\",\"prop\",\"_this\",\"setState\",\"authenticated\",\"classes\",\"this\",\"props\",\"react_default\",\"a\",\"createElement\",\"className\",\"container\",\"Typography_default\",\"variant\",\"gutterBottom\",\"displayName\",\"Component\",\"withStyles\",\"display\",\"height\",\"alignItems\",\"justifyContent\",\"App\",\"login\",\"signInWithPopup\",\"then\",\"result\",\"logout\",\"signOut\",\"componentDidMount\",\"onAuthStateChanged\",\"AppBar_default\",\"position\",\"color\",\"Toolbar_default\",\"noValidate\",\"autoComplete\",\"Button_default\",\"button\",\"onClick\",\"components_Main\",\"theme\",\"margin\",\"flexDirection\",\"spacing\",\"unit\",\"Boolean\",\"window\",\"location\",\"hostname\",\"match\",\"ReactDOM\",\"render\",\"src_App_0\",\"document\",\"getElementById\",\"navigator\",\"serviceWorker\",\"ready\",\"registration\",\"unregister\"],\"mappings\":\"mRAWAA,EAAAA,EAASC,cATM,CACXC,OAAQ,0CACRC,WAAY,kCACZC,YAAa,yCACbC,UAAW,kBACXC,cAAe,8BACfC,kBAAmB,iBAIhB,IAAMC,EAAW,IAAIR,EAAAA,EAASS,KAAKC,mBAC7BD,EAAOT,EAAAA,EAASS,OCCvBE,GDASX,EAAf,mNCEIY,MAAQ,CACJC,KAAM,KACNC,UAAU,KAGdC,0BAA4B,SAACC,GACzBC,EAAKC,SAAS,CACVJ,SAAUE,EAAKG,cACfN,KAAMG,EAAKH,gFAIV,IACGO,EAAYC,KAAKC,MAAjBF,QAER,OACIG,EAAAC,EAAAC,cAAA,MAAA,CAAKC,UAAWN,EAAQO,WACnBN,KAAKT,MAAME,SACZS,EAAAC,EAAAC,cAACG,EAAAJ,EAAD,CAAYK,QAAQ,KAAKC,cAAY,GAArC,YACeT,KAAKT,MAAMC,KAAKkB,aAG/BR,EAAAC,EAAAC,cAACG,EAAAJ,EAAD,CAAYK,QAAQ,KAAKC,cAAY,GAArC,oCAxBGE,EAAAA,YAqCJC,EAAAA,OAAAA,EAAAA,WAAAA,CA9CA,WAAA,MAAO,CAClBN,UAAW,CACPO,QAAS,OACTC,OAAQ,oBACRC,WAAY,SACZC,eAAgB,YAyCTJ,CAAmBtB,GC7B5B2B,6MAEF1B,MAAQ,CACJC,KAAM,KACNM,eAAe,KAGnBoB,MAAQ,WACJ9B,EAAK+B,gBAAgBhC,GAChBiC,KAAK,SAACC,GACHzB,EAAKC,SAAS,CACVL,KAAM6B,EAAO7B,KACbM,eAAe,SAK/BwB,OAAS,WACLlC,EAAKmC,UACAH,KAAK,WACFxB,EAAKC,SAAS,CACVL,KAAM,KACNM,eAAe,SAK/B0B,kBAAoB,WAChBpC,EAAKqC,mBAAmB,SAACjC,GACjBA,GACAI,EAAKC,SAAS,CAAEL,KAAAA,EAAMM,eAAe,+EAKpC,IACGC,EAAYC,KAAKC,MAAjBF,QACR,OACIG,EAAAC,EAAAC,cAAA,MAAA,CAAKC,UAAU,OACXH,EAAAC,EAAAC,cAACsB,EAAAvB,EAAD,CAAQwB,SAAS,SAASC,MAAM,WAC5B1B,EAAAC,EAAAC,cAACyB,EAAA1B,EAAD,KACID,EAAAC,EAAAC,cAACG,EAAAJ,EAAD,CAAYK,QAAQ,KAAKoB,MAAM,WAA/B,WACA1B,EAAAC,EAAAC,cAAA,OAAA,CAAMC,UAAWN,EAAQO,UAAWwB,YAAU,EAACC,aAAa,OACvD/B,KAAKT,MAAMC,KAAOU,EAAAC,EAAAC,cAAC4B,EAAA7B,EAAD,CAAQK,QAAQ,WAAWH,UAAWN,EAAQkC,OAAQC,QAASlC,KAAKsB,QAApE,WAA+FpB,EAAAC,EAAAC,cAAC4B,EAAA7B,EAAD,CAAQK,QAAQ,WAAWH,UAAWN,EAAQkC,OAAQC,QAASlC,KAAKkB,OAApE,aAI9HhB,EAAAC,EAAAC,cAAC+B,EAAD,CAAMrC,cAAeE,KAAKT,MAAMO,cAAeN,KAAMQ,KAAKT,MAAMC,eA/ClEmB,EAAAA,WAyDCC,EAAAA,OAAAA,EAAAA,WAAAA,CApEJ,SAAAwB,GAAK,MAAK,CACrB9B,UAAW,CACP+B,OAAQ,aACRxB,QAAS,OACTyB,cAAe,OAEnBL,OAAQ,CACJI,OAAQD,EAAMG,QAAQC,QA6DX5B,CAAmBK,GCnElBwB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,kECXNC,EAAAA,EAASC,OAAO7C,EAAAC,EAAAC,cAAC4C,EAAD,MAASC,SAASC,eAAe,SD0H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMjC,KAAK,SAAAkC,GACjCA,EAAaC\",\"sourcesContent\":[\"import firebase from 'firebase'\\n\\nconst config = {\\n    apiKey: 'AIzaSyDcyfdg5qzoEbM-9v7Q6WwpGJQIZqfQQRU',\\n    authDomain: 'user-feed-84a20.firebaseapp.com',\\n    databaseURL: 'https://user-feed-84a20.firebaseio.com',\\n    projectId: 'user-feed-84a20',\\n    storageBucket: 'user-feed-84a20.appspot.com',\\n    messagingSenderId: '969646773326'\\n}\\n\\nfirebase.initializeApp(config)\\nexport const provider = new firebase.auth.GoogleAuthProvider()\\nexport const auth = firebase.auth()\\nexport default firebase\",\"import React, { Component } from 'react'\\nimport PropTypes from 'prop-types'\\nimport { withStyles } from '@material-ui/core/styles'\\nimport Typography from '@material-ui/core/Typography'\\n\\nconst styles = () => ({\\n    container: {\\n        display: 'flex',\\n        height: 'calc(100% - 64px)',\\n        alignItems: 'center',\\n        justifyContent: 'center'\\n    }\\n})\\n\\nclass Main extends Component {\\n\\n    state = {\\n        user: null,\\n        loggedIn: false\\n    }\\n\\n    componentWillReceiveProps = (prop) => {\\n        this.setState({\\n            loggedIn: prop.authenticated,\\n            user: prop.user\\n        })\\n    }\\n\\n    render() {\\n        const { classes } = this.props\\n\\n        return (\\n            <div className={classes.container}>\\n                {this.state.loggedIn ? \\n                <Typography variant=\\\"h6\\\" gutterBottom>\\n                    Welcome, { this.state.user.displayName }\\n                </Typography>\\n                : \\n                <Typography variant=\\\"h6\\\" gutterBottom>\\n                    Ope, nothing to see here\\n                </Typography>\\n                }\\n            </div>\\n        )\\n    }\\n}\\n\\nMain.propTypes = {\\n    classes: PropTypes.object.isRequired\\n}\\n\\nexport default withStyles(styles)(Main)\",\"import React, { Component } from 'react'\\nimport PropTypes from 'prop-types'\\nimport { withStyles } from '@material-ui/core/styles'\\nimport Button from '@material-ui/core/Button'\\nimport AppBar from '@material-ui/core/AppBar'\\nimport Toolbar from '@material-ui/core/Toolbar'\\nimport Typography from '@material-ui/core/Typography'\\nimport { auth, provider } from './firebase'\\nimport './App.css'\\nimport Main from './components/Main'\\n\\nconst styles = theme => ({\\n    container: {\\n        margin: '0 0 0 auto',\\n        display: 'flex',\\n        flexDirection: 'row'\\n    },\\n    button: {\\n        margin: theme.spacing.unit,\\n    }\\n})\\n\\nclass App extends Component {\\n\\n    state = {\\n        user: null,\\n        authenticated: false\\n    }\\n\\n    login = () => {\\n        auth.signInWithPopup(provider)\\n            .then((result) => {\\n                this.setState({\\n                    user: result.user,\\n                    authenticated: true\\n                })\\n            })\\n    }\\n\\n    logout = () => {\\n        auth.signOut()\\n            .then(() => {\\n                this.setState({\\n                    user: null,\\n                    authenticated: false\\n                })\\n            })\\n    }\\n\\n    componentDidMount = () => {\\n        auth.onAuthStateChanged((user) => {\\n            if (user) {\\n                this.setState({ user, authenticated: true })\\n            }\\n        })\\n    }\\n\\n        render() {\\n            const { classes } = this.props\\n            return (\\n                <div className='app'>\\n                    <AppBar position=\\\"static\\\" color=\\\"default\\\">\\n                        <Toolbar>\\n                            <Typography variant=\\\"h6\\\" color=\\\"inherit\\\">anon.io</Typography>\\n                            <form className={classes.container} noValidate autoComplete='off'>\\n                                {this.state.user ? <Button variant=\\\"outlined\\\" className={classes.button} onClick={this.logout}>Log Out</Button> : <Button variant=\\\"outlined\\\" className={classes.button} onClick={this.login}>Log In</Button>}\\n                            </form>\\n                        </Toolbar>\\n                    </AppBar>\\n                    <Main authenticated={this.state.authenticated} user={this.state.user}/>\\n                </div>\\n            )\\n        }\\n    }\\n\\n    App.propTypes = {\\n        classes: PropTypes.object.isRequired\\n    }\\n\\n    export default withStyles(styles)(App)\",\"// This optional code is used to register a service worker.\\n// register() is not called by default.\\n\\n// This lets the app load faster on subsequent visits in production, and gives\\n// it offline capabilities. However, it also means that developers (and users)\\n// will only see deployed updates on subsequent visits to a page, after all the\\n// existing tabs open on the page have been closed, since previously cached\\n// resources are updated in the background.\\n\\n// To learn more about the benefits of this model and instructions on how to\\n// opt-in, read http://bit.ly/CRA-PWA\\n\\nconst isLocalhost = Boolean(\\n  window.location.hostname === 'localhost' ||\\n    // [::1] is the IPv6 localhost address.\\n    window.location.hostname === '[::1]' ||\\n    // 127.0.0.1/8 is considered localhost for IPv4.\\n    window.location.hostname.match(\\n      /^127(?:\\\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\\n    )\\n);\\n\\nexport function register(config) {\\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\\n    // The URL constructor is available in all browsers that support SW.\\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\\n    if (publicUrl.origin !== window.location.origin) {\\n      // Our service worker won't work if PUBLIC_URL is on a different origin\\n      // from what our page is served on. This might happen if a CDN is used to\\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\\n      return;\\n    }\\n\\n    window.addEventListener('load', () => {\\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\\n\\n      if (isLocalhost) {\\n        // This is running on localhost. Let's check if a service worker still exists or not.\\n        checkValidServiceWorker(swUrl, config);\\n\\n        // Add some additional logging to localhost, pointing developers to the\\n        // service worker/PWA documentation.\\n        navigator.serviceWorker.ready.then(() => {\\n          console.log(\\n            'This web app is being served cache-first by a service ' +\\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\\n          );\\n        });\\n      } else {\\n        // Is not localhost. Just register service worker\\n        registerValidSW(swUrl, config);\\n      }\\n    });\\n  }\\n}\\n\\nfunction registerValidSW(swUrl, config) {\\n  navigator.serviceWorker\\n    .register(swUrl)\\n    .then(registration => {\\n      registration.onupdatefound = () => {\\n        const installingWorker = registration.installing;\\n        if (installingWorker == null) {\\n          return;\\n        }\\n        installingWorker.onstatechange = () => {\\n          if (installingWorker.state === 'installed') {\\n            if (navigator.serviceWorker.controller) {\\n              // At this point, the updated precached content has been fetched,\\n              // but the previous service worker will still serve the older\\n              // content until all client tabs are closed.\\n              console.log(\\n                'New content is available and will be used when all ' +\\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\\n              );\\n\\n              // Execute callback\\n              if (config && config.onUpdate) {\\n                config.onUpdate(registration);\\n              }\\n            } else {\\n              // At this point, everything has been precached.\\n              // It's the perfect time to display a\\n              // \\\"Content is cached for offline use.\\\" message.\\n              console.log('Content is cached for offline use.');\\n\\n              // Execute callback\\n              if (config && config.onSuccess) {\\n                config.onSuccess(registration);\\n              }\\n            }\\n          }\\n        };\\n      };\\n    })\\n    .catch(error => {\\n      console.error('Error during service worker registration:', error);\\n    });\\n}\\n\\nfunction checkValidServiceWorker(swUrl, config) {\\n  // Check if the service worker can be found. If it can't reload the page.\\n  fetch(swUrl)\\n    .then(response => {\\n      // Ensure service worker exists, and that we really are getting a JS file.\\n      const contentType = response.headers.get('content-type');\\n      if (\\n        response.status === 404 ||\\n        (contentType != null && contentType.indexOf('javascript') === -1)\\n      ) {\\n        // No service worker found. Probably a different app. Reload the page.\\n        navigator.serviceWorker.ready.then(registration => {\\n          registration.unregister().then(() => {\\n            window.location.reload();\\n          });\\n        });\\n      } else {\\n        // Service worker found. Proceed as normal.\\n        registerValidSW(swUrl, config);\\n      }\\n    })\\n    .catch(() => {\\n      console.log(\\n        'No internet connection found. App is running in offline mode.'\\n      );\\n    });\\n}\\n\\nexport function unregister() {\\n  if ('serviceWorker' in navigator) {\\n    navigator.serviceWorker.ready.then(registration => {\\n      registration.unregister();\\n    });\\n  }\\n}\\n\",\"import React from 'react'\\nimport ReactDOM from 'react-dom'\\nimport './index.css'\\nimport App from './App'\\nimport * as serviceWorker from './serviceWorker'\\nimport 'typeface-roboto'\\n\\nReactDOM.render(<App />, document.getElementById('root'))\\nserviceWorker.unregister()\\n\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{181:function(e,t,n){\"use strict\";n.r(t);var a=n(2),o=n.n(a),i=n(21),r=n.n(i),c=(n(71),n(28)),s=n(29),u=n(32),l=n(30),h=n(33),d=n(31),p=n(42),m=n.n(p),f=n(64),g=n.n(f),v=n(65),b=n.n(v),w=n(22),y=n.n(w),O=n(23),j=n.n(O);j.a.initializeApp({apiKey:\"AIzaSyDcyfdg5qzoEbM-9v7Q6WwpGJQIZqfQQRU\",authDomain:\"user-feed-84a20.firebaseapp.com\",databaseURL:\"https://user-feed-84a20.firebaseio.com\",projectId:\"user-feed-84a20\",storageBucket:\"user-feed-84a20.appspot.com\",messagingSenderId:\"969646773326\"});var E=new j.a.auth.GoogleAuthProvider,I=j.a.auth(),k=(j.a,n(87),function(e){function t(){var e,n;Object(c.a)(this,t);for(var a=arguments.length,o=new Array(a),i=0;i<a;i++)o[i]=arguments[i];return(n=Object(u.a)(this,(e=Object(l.a)(t)).call.apply(e,[this].concat(o)))).state={user:null,loggedIn:!1},n.componentWillReceiveProps=function(e){n.setState({loggedIn:e.authenticated,user:e.user})},n}return Object(h.a)(t,e),Object(s.a)(t,[{key:\"render\",value:function(){var e=this.props.classes;return o.a.createElement(\"div\",{className:e.container},this.state.loggedIn?o.a.createElement(y.a,{variant:\"h6\",gutterBottom:!0},\"Welcome, \",this.state.user.displayName):o.a.createElement(y.a,{variant:\"h6\",gutterBottom:!0},\"Ope, nothing to see here\"))}}]),t}(a.Component)),S=Object(d.withStyles)(function(){return{container:{display:\"flex\",height:\"calc(100% - 64px)\",alignItems:\"center\",justifyContent:\"center\"}}})(k),C=function(e){function t(){var e,n;Object(c.a)(this,t);for(var a=arguments.length,o=new Array(a),i=0;i<a;i++)o[i]=arguments[i];return(n=Object(u.a)(this,(e=Object(l.a)(t)).call.apply(e,[this].concat(o)))).state={user:null,authenticated:!1},n.login=function(){I.signInWithPopup(E).then(function(e){n.setState({user:e.user,authenticated:!0})})},n.logout=function(){I.signOut().then(function(){n.setState({user:null,authenticated:!1})})},n.componentDidMount=function(){I.onAuthStateChanged(function(e){e&&n.setState({user:e,authenticated:!0})})},n}return Object(h.a)(t,e),Object(s.a)(t,[{key:\"render\",value:function(){var e=this.props.classes;return o.a.createElement(\"div\",{className:\"app\"},o.a.createElement(g.a,{position:\"static\",color:\"default\"},o.a.createElement(b.a,null,o.a.createElement(y.a,{variant:\"h6\",color:\"inherit\"},\"anon.io\"),o.a.createElement(\"form\",{className:e.container,noValidate:!0,autoComplete:\"off\"},this.state.user?o.a.createElement(m.a,{variant:\"outlined\",className:e.button,onClick:this.logout},\"Log Out\"):o.a.createElement(m.a,{variant:\"outlined\",className:e.button,onClick:this.login},\"Log In\")))),o.a.createElement(S,{authenticated:this.state.authenticated,user:this.state.user}))}}]),t}(a.Component),A=Object(d.withStyles)(function(e){return{container:{margin:\"0 0 0 auto\",display:\"flex\",flexDirection:\"row\"},button:{margin:e.spacing.unit}}})(C);Boolean(\"localhost\"===window.location.hostname||\"[::1]\"===window.location.hostname||window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));n(179);r.a.render(o.a.createElement(A,null),document.getElementById(\"root\")),\"serviceWorker\"in navigator&&navigator.serviceWorker.ready.then(function(e){e.unregister()})},66:function(e,t,n){e.exports=n(181)},71:function(e,t,n){},87:function(e,t,n){}},[[66,2,1]]]);","extractedComments":[]}